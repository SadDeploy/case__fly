@charset "UTF-8";
@import url(https://fonts.googleapis.com/css?family=Roboto:400,500,300&subset=latin,cyrillic);
@import url(https://fonts.googleapis.com/css?family=Roboto+Condensed&subset=latin,cyrillic);
/**
sass/
|
|– base/
|   |– _forms.scss        # Forms rules
|   |– _typography.scss   # Typography rules
|   |– _buttons.scss      # Buttons
|   |– _forms.scss        # Forms
|   …                     # Etc.
|
|– modules/
|   |– _carousel.scss     # Carousel
|   |– _cover.scss        # Cover
|   |– _dropdown.scss     # Dropdown
|   …                     # Etc.
|
|– partials/
|   |– _navigation.scss   # Navigation
|   |– _grid.scss         # Grid system
|   |– _header.scss       # Header
|   |– _footer.scss       # Footer
|   |– _sidebar.scss      # Sidebar
|   …                     # Etc.
|
|– pages/
|   |– _home.scss         # Home specific styles
|   |– _contact.scss      # Contact specific styles
|   …                     # Etc.
|
|– themes/
|   |– _theme.scss        # Default theme
|   |– _admin.scss        # Admin theme
|   …                     # Etc.
|
|– helpers/
|   |– _variables.scss    # Sass Variables
|   |– _functions.scss    # Sass Functions
|   |– _mixins.scss       # Sass Mixins
|   |– _placeholders.scss # Sass Placeholders
|
|– vendors/
|   |– _reset.scss         # Reset
|   |– _debug.scss         # Debug mode
|   …                      # Etc.
|
`– main.scss              # Main Sass file
*/
/**
 * Which objects and abstractions would you like to use?
 */
/**
 * clearfix
*/
/**
 * center-block
*/
/**
 * list
*/
/**
 * forms
*/
/**
 * text
*/
/**
 * table
*/
/**
 * buttons
*/
/**
 * custom
*/
/* box sizing */
/* box shadow */
/* opacity */
/* border radius */
/* text shadow */
/* gradient */
/* transform */
/* transform-origin */
/* transform style */
/* double border */
/* triple borders */
/* transition */
/* keyframes */
/* animation */
/**
 * border-radius
*/
/**
 * alert
*/
/**
 * padding / margin
*/
/**
 * responsive utilities
*/
.fade {
  opacity: 0;
  -webkit-transition: opacity 0.15s linear;
  -moz-transition: opacity 0.15s linear;
  -o-transition: opacity 0.15s linear;
  transition: opacity 0.15s linear; }
  .fade.in {
    opacity: 1; }

.collapse {
  display: none; }
  .collapse.in {
    display: block; }

.collapsing {
  position: relative;
  height: 0;
  overflow: hidden;
  -webkit-transition-property: height, visibility;
  -moz-transition-property: height, visibility;
  -o-transition-property: height, visibility;
  transition-property: height, visibility;
  -webkit-transition-property: 0.35s;
  -moz-transition-property: 0.35s;
  -o-transition-property: 0.35s;
  transition-property: 0.35s;
  -webkit-transition-timing-function: ease;
  -moz-transition-timing-function: ease;
  -o-transition-timing-function: ease;
  transition-timing-function: ease; }

.slick-slide {
  position: relative; }

.slick-list {
  padding-top: 10px !important; }

.slick-center {
  position: relative; }
  .slick-center::before {
    content: '';
    position: absolute;
    top: -50px;
    z-index: 10;
    border-style: solid;
    border-width: 0 9.5px 10px 9.5px;
    border-color: transparent transparent #374355 transparent; }

.slick-prev, .slick-next {
  width: 48px;
  height: 48px;
  background-color: rgba(55, 67, 85, 0.7);
  border: 2px solid white;
  z-index: 9;
  -webkit-border-radius: 50%;
  -moz-border-radius: 50%;
  border-radius: 50%; }
  .slick-prev::before, .slick-next::before {
    content: '';
    width: 100%;
    height: 100%;
    display: block; }

.slick-prev {
  left: 40px; }
  .slick-prev::before {
    background: url("../images/plugins/iconArrPr.png") center center no-repeat, transparent; }

.slick-next {
  right: 40px; }
  .slick-next::before {
    background: url("../images/plugins/iconArrNext.png") center center no-repeat, transparent; }

.select2-container {
  width: auto !important;
  display: block; }

.select2-container--default .select2-selection--single .select2-selection__arrow {
  height: 100%; }

.select2-container--default .select2-results__option--highlighted[aria-selected] {
  background: #8493a8; }

.select2-container .select2-selection--single .select2-selection__rendered {
  padding: 0; }

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

/**
 * Make all elements box-sizing
*/
*,
*:before,
*:after {
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
          box-sizing: border-box; }

/**
 * Delete focus border
*/
a:active, a:focus {
  outline: none; }

input, textarea {
  outline: none; }

input:active, textarea:active {
  outline: none; }

button:active, button:focus {
  outline: none; }

:focus {
  outline: none; }

button::-moz-focus-inner {
  border: 0; }

/**
 * Clearfix
*/
.clearfix:before,
.media:before,
.clearfix:after, .media:after {
  content: " ";
  display: table; }

.clearfix:after, .media:after {
  clear: both; }

/**
 * HTML
*/
html {
  -webkit-tap-highlight-color: transparent; }

/**
 * Basic typography styles
*/
body {
  background-color: #cad3df;
  color: #333;
  font-weight: 300;
  font-size: 17px;
  font-family: "Roboto", Arial, sans-serif;
  line-height: 1.471; }

section {
  background: #fff; }

/**
 * Link
*/
a {
  color: #333;
  -webkit-transition: all 0.3s ease;
  -moz-transition: all 0.3s ease;
  -o-transition: all 0.3s ease;
  transition: all 0.3s ease; }
  a:hover,
  a:active,
  a:focus {
    color: #000; }

/**
 * Images
*/
img {
  max-width: 100%;
  height: auto; }

.img--right {
  float: right;
  margin-bottom: 25px;
  margin-left: 25px; }

.img--left {
  float: left;
  margin-right: 25px;
  margin-bottom: 25px; }

.img--center {
  display: block;
  margin-right: auto;
  margin-bottom: 25px;
  margin-left: auto; }

.btn {
  display: inline-block;
  font-weight: 400;
  text-align: center;
  vertical-align: middle;
  -ms-touch-action: manipulation;
      touch-action: manipulation;
  cursor: pointer;
  text-decoration: none;
  background-image: none;
  border: 1px solid transparent;
  margin-right: 8px;
  margin-bottom: 0;
  padding: 9px 12px;
  font-size: 17px;
  line-height: 1.471;
  -webkit-border-radius: 5px;
     -moz-border-radius: 5px;
          border-radius: 5px;
  min-width: 156px;
  height: 45px;
  text-transform: uppercase; }
  .btn:last-child {
    margin-right: 0; }
  .btn:hover,
  .btn:focus,
  .btn.focus {
    color: #8493a8;
    text-decoration: none; }
  .btn[disabled] {
    background: #f7f7f7;
    border-color: #ddd;
    color: #aaa;
    cursor: not-allowed; }
  .btn--full {
    display: block;
    width: 100%; }
    .btn--full + .btn--full {
      margin-top: 5px; }
  .btn--natural {
    vertical-align: baseline;
    font-size: inherit;
    line-height: inherit;
    padding-right: 0.5em;
    padding-left: 0.5em; }
  .btn .icon {
    font-size: 130%;
    height: 32px; }
    .btn .icon:before {
      line-height: 30px; }
  .btn_icon-text {
    padding: 0 4px; }
    .btn_icon-text .icon {
      float: left;
      margin: 0 8px; }
    .btn_icon-text .sign {
      display: inline-block;
      font-size: 10px;
      line-height: 30px;
      margin: 0 4px;
      text-transform: uppercase; }
  .btn__text {
    display: inline-block;
    height: 32px;
    line-height: 30px;
    padding-right: 8px; }
  .btn_icon {
    padding: 0;
    width: 32px; }
  .btn_icon-left {
    padding-left: 16px; }
    .btn_icon-left .icon {
      position: absolute;
      top: 0;
      left: 8px; }
  .btn_icon-right {
    padding-left: 16px; }
    .btn_icon-right .icon {
      position: absolute;
      top: 0;
      right: 8px; }
  .btn--default {
    color: #8493a8;
    background-color: #fff;
    border-color: #cad3df; }
    .btn--default:focus,
    .btn--default.focus {
      color: #8493a8;
      background-color: white;
      border-color: #e3e8ee; }
    .btn--default:hover {
      color: #8493a8;
      background-color: white;
      border-color: #e3e8ee; }
    .btn--default:active,
    .btn--default.active {
      background-color: #f2f2f2;
      border-color: #bac6d5;
      border-top-color: #97a9c0;
      -webkit-box-shadow: 0 -1px 0 0 #97a9c0;
      -moz-box-shadow: 0 -1px 0 0 #97a9c0;
      -o-box-shadow: 0 -1px 0 0 #97a9c0;
      box-shadow: 0 -1px 0 0 #97a9c0; }
  .btn--primary {
    color: #fff;
    background-color: #0082d5;
    border-color: #0082d5; }
    .btn--primary:focus,
    .btn--primary.focus {
      color: #fff;
      background-color: #009bfe;
      border-color: #009bfe; }
    .btn--primary:hover {
      color: #fff;
      background-color: #009bfe;
      border-color: #009bfe; }
    .btn--primary:active,
    .btn--primary.active {
      background-color: #0072bc;
      border-color: #0072bc;
      border-top-color: #005083;
      -webkit-box-shadow: 0 -1px 0 0 #005083;
      -moz-box-shadow: 0 -1px 0 0 #005083;
      -o-box-shadow: 0 -1px 0 0 #005083;
      box-shadow: 0 -1px 0 0 #005083; }
  .btn--success {
    color: #fff;
    background-color: #2db386;
    border-color: #2db386; }
    .btn--success:focus,
    .btn--success.focus {
      color: #fff;
      background-color: #3bce9c;
      border-color: #3bce9c; }
    .btn--success:hover {
      color: #fff;
      background-color: #3bce9c;
      border-color: #3bce9c; }
    .btn--success:active,
    .btn--success.active {
      background-color: #289f77;
      border-color: #289f77;
      border-top-color: #1d7255;
      -webkit-box-shadow: 0 -1px 0 0 #1d7255;
      -moz-box-shadow: 0 -1px 0 0 #1d7255;
      -o-box-shadow: 0 -1px 0 0 #1d7255;
      box-shadow: 0 -1px 0 0 #1d7255; }
  .btn--info {
    color: #fff;
    background-color: #0082d5;
    border-color: #0082d5; }
    .btn--info:focus,
    .btn--info.focus {
      color: #fff;
      background-color: #009bfe;
      border-color: #009bfe; }
    .btn--info:hover {
      color: #fff;
      background-color: #009bfe;
      border-color: #009bfe; }
    .btn--info:active,
    .btn--info.active {
      background-color: #0072bc;
      border-color: #0072bc;
      border-top-color: #005083;
      -webkit-box-shadow: 0 -1px 0 0 #005083;
      -moz-box-shadow: 0 -1px 0 0 #005083;
      -o-box-shadow: 0 -1px 0 0 #005083;
      box-shadow: 0 -1px 0 0 #005083; }
  .btn--warning {
    color: #fff;
    background-color: #ffaa00;
    border-color: #ffaa00; }
    .btn--warning:focus,
    .btn--warning.focus {
      color: #fff;
      background-color: #ffb829;
      border-color: #ffb829; }
    .btn--warning:hover {
      color: #fff;
      background-color: #ffb829;
      border-color: #ffb829; }
    .btn--warning:active,
    .btn--warning.active {
      background-color: #e69900;
      border-color: #e69900;
      border-top-color: #ad7400;
      -webkit-box-shadow: 0 -1px 0 0 #ad7400;
      -moz-box-shadow: 0 -1px 0 0 #ad7400;
      -o-box-shadow: 0 -1px 0 0 #ad7400;
      box-shadow: 0 -1px 0 0 #ad7400; }
  .btn--danger {
    color: #fff;
    background-color: #d93636;
    border-color: #d93636; }
    .btn--danger:focus,
    .btn--danger.focus {
      color: #fff;
      background-color: #df5858;
      border-color: #df5858; }
    .btn--danger:hover {
      color: #fff;
      background-color: #df5858;
      border-color: #df5858; }
    .btn--danger:active,
    .btn--danger.active {
      background-color: #ce2727;
      border-color: #ce2727;
      border-top-color: #9f1e1e;
      -webkit-box-shadow: 0 -1px 0 0 #9f1e1e;
      -moz-box-shadow: 0 -1px 0 0 #9f1e1e;
      -o-box-shadow: 0 -1px 0 0 #9f1e1e;
      box-shadow: 0 -1px 0 0 #9f1e1e; }
  .btn--transparent {
    color: #0082d5;
    background-color: transparent;
    border-color: #0082d5; }
    .btn--transparent:focus,
    .btn--transparent.focus {
      color: #0082d5;
      background-color: rgba(20, 20, 20, 0);
      border-color: #009bfe; }
    .btn--transparent:hover {
      color: #0082d5;
      background-color: rgba(20, 20, 20, 0);
      border-color: #009bfe; }
    .btn--transparent:active,
    .btn--transparent.active {
      background-color: transparent;
      border-color: #0072bc;
      border-top-color: #005083;
      -webkit-box-shadow: 0 -1px 0 0 #005083;
      -moz-box-shadow: 0 -1px 0 0 #005083;
      -o-box-shadow: 0 -1px 0 0 #005083;
      box-shadow: 0 -1px 0 0 #005083; }
    .btn--transparent:hover {
      background-color: #009bfe;
      color: #fff; }
    .btn--transparent.active {
      color: #fff;
      background-color: #0072bc;
      border-color: #0072bc;
      border-top-color: #005083;
      -webkit-box-shadow: 0 -1px 0 0 #005083;
      -moz-box-shadow: 0 -1px 0 0 #005083;
      -o-box-shadow: 0 -1px 0 0 #005083;
      box-shadow: 0 -1px 0 0 #005083; }
  .btn__lg {
    padding: 11px 16px;
    font-size: 18px;
    line-height: 1.83333;
    -webkit-border-radius: 5px;
       -moz-border-radius: 5px;
            border-radius: 5px;
    height: 55px; }
  .btn__sm {
    padding: 7px 10px;
    font-size: 14px;
    line-height: 1.83333;
    -webkit-border-radius: 5px;
       -moz-border-radius: 5px;
            border-radius: 5px;
    height: 40px; }
  .btn__xs {
    padding: 5px 8px;
    font-size: 12px;
    line-height: 1.83333;
    -webkit-border-radius: 5px;
       -moz-border-radius: 5px;
            border-radius: 5px;
    height: 35px; }
  .btn--round {
    -webkit-border-radius: 50px;
    -moz-border-radius: 50px;
    border-radius: 50px; }

fieldset {
  padding: 0;
  margin: 0;
  border: 0;
  min-width: 0; }

legend {
  display: block;
  width: 100%;
  padding: 0;
  margin-bottom: 25px;
  font-size: 25.5px;
  line-height: inherit;
  color: #333;
  border: 0; }

label {
  display: inline-block;
  max-width: 100%;
  margin-bottom: 5px;
  color: #8493a8; }

input[type="search"] {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -o-box-sizing: border-box;
  box-sizing: border-box; }

input[type="radio"],
input[type="checkbox"] {
  margin: 4px 0 0;
  margin-top: 1px \9;
  line-height: normal; }

input[type="file"] {
  display: block; }

input[type="range"] {
  display: block;
  width: 100%; }

select[multiple],
select[size] {
  height: auto; }

input[type="file"]:focus,
input[type="radio"]:focus,
input[type="checkbox"]:focus {
  outline: thin dotted;
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px; }

.form--control, .select2-container--default .select2-selection--single {
  display: block;
  width: 100%;
  height: 45px;
  padding: 9px 12px;
  font-size: 15px;
  line-height: 1.471;
  color: #54657e;
  background-color: #eceff4;
  background-image: none;
  border: 1px solid #cad3df;
  -webkit-border-radius: 5px;
     -moz-border-radius: 5px;
          border-radius: 5px;
  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
  -moz-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
  -o-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
  -webkit-transition: border-color ease-in-out 0.15s, -webkit-box-shadow ease-in-out 0.15s;
  -moz-transition: border-color ease-in-out 0.15s, -moz-box-shadow ease-in-out 0.15s;
  -o-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
  transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s; }
  .form--control:hover, .select2-container--default .select2-selection--single:hover {
    border-color: #8493a8; }
  .form--control:focus, .select2-container--default .select2-selection--single:focus {
    border-color: #0082d5;
    background: #fff;
    outline: 0; }
  .form--control::-moz-placeholder, .select2-container--default .select2-selection--single::-moz-placeholder {
    color: #8493a8;
    opacity: 1; }
  .form--control:-ms-input-placeholder, .select2-container--default .select2-selection--single:-ms-input-placeholder {
    color: #8493a8; }
  .form--control::-webkit-input-placeholder, .select2-container--default .select2-selection--single::-webkit-input-placeholder {
    color: #8493a8; }
  .form--control[disabled],
  .select2-container--default [disabled].select2-selection--single,
  .form--control[readonly],
  .select2-container--default [readonly].select2-selection--single,
  fieldset[disabled] .form--control, fieldset[disabled] .select2-container--default .select2-selection--single, .select2-container--default fieldset[disabled] .select2-selection--single {
    background-color: #bbb;
    opacity: 1; }
  .form--control[disabled],
  .select2-container--default [disabled].select2-selection--single,
  fieldset[disabled] .form--control, fieldset[disabled] .select2-container--default .select2-selection--single, .select2-container--default fieldset[disabled] .select2-selection--single {
    cursor: not-allowed; }

textarea.form--control, .select2-container--default textarea.select2-selection--single {
  height: auto;
  resize: none; }

input[type="search"] {
  -webkit-appearance: none; }

.form--group {
  margin-bottom: 20px; }

.radio,
.checkbox {
  position: relative;
  display: block; }
  .radio label,
  .checkbox label {
    padding-left: 36px;
    margin-bottom: 0;
    font-weight: 300;
    cursor: pointer;
    line-height: 1.6;
    font-size: 15px; }
    .radio label:after,
    .checkbox label:after {
      content: '';
      position: absolute;
      top: 0;
      left: 4px;
      display: block;
      width: 25px;
      height: 25px;
      border: 1px solid #cad3df;
      background-color: #eceff4; }

.checkbox input[type="checkbox"] {
  display: none; }

.radio input[type="radio"] {
  display: none; }

.checkbox label:after {
  -webkit-border-radius: 5px;
  -moz-border-radius: 5px;
  border-radius: 5px; }

.radio label:after {
  -webkit-border-radius: 50%;
  -moz-border-radius: 50%;
  border-radius: 50%; }

.checkbox input[type="checkbox"]:checked + label:after {
  background: url("../images/icons/icoCheck.png") center center no-repeat, #eceff4; }

.radio input[type="radio"]:checked + label:after {
  background: url("../images/icons/icoRadio.png") center center no-repeat, #eceff4; }

.radio + .radio,
.checkbox + .checkbox {
  margin-top: 20px; }

.radio--inline,
.checkbox--inline {
  position: relative;
  display: inline-block;
  padding-left: 20px;
  margin-bottom: 0;
  vertical-align: middle;
  font-weight: normal;
  cursor: pointer; }

.radio--inline + .radio--inline,
.checkbox--inline + .checkbox--inline {
  margin-top: 0;
  margin-left: 10px; }

@media print {
  @page {
    margin: 1cm;
    size: A4 portrait; }
  *, ::before, ::after {
    -webkit-box-shadow: none !important;
       -moz-box-shadow: none !important;
            box-shadow: none !important;
    color: black !important;
    text-shadow: none !important; }
  a,
  a:visited {
    text-decoration: underline; }
  a[href]:after {
    content: " (" attr(href) ")"; }
  abbr[title]:after {
    content: " (" attr(title) ")"; }
  a[href^="#"]:after,
  a[href^="javascript:"]:after {
    content: ""; }
  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid; }
  thead {
    display: table-header-group; }
  tr,
  img {
    page-break-inside: avoid; }
  img {
    -webkit-filter: grayscale(100%);
    -moz-filter: grayscale(100%);
    filter: grayscale(100%);
    max-width: 100% !important; }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3; }
  /**
    * Avoid too large gaps before each new chapter
  */
  h1 {
    margin-top: 3rem; }
  /**
   * Avoid breaking page right after a title
  */
  h1, h2, h3 {
    page-break-after: avoid; }
  /**
  * Hide any superfluous element
  * S1. Further reading links
  * S2. Buttons
  * S3. Option panel
  * S4. Button to go back to top
  * S5. Anchor links in headings
  * S6. Content about translation on top
  * S7. Table of contents
  * S8. Sass-syntax code blocks
  * S9. SVG icons
  */
  h6, h6 + ul,
  .donate,
  .button,
  .aside,
  .button-ui--back,
  .anchor-link,
  .translation-warning,
  .toc,
  [data-syntax='sass'],
  svg {
    display: none; }
  .hidden--print {
    display: none !important; } }

table {
  background-color: transparent; }

caption {
  padding-top: 8px;
  padding-bottom: 8px;
  text-align: left; }

th {
  text-align: left; }

.table {
  width: 100%;
  max-width: 100%;
  margin-bottom: 25px;
  font-size: 15px; }
  .table tr > th,
  .table tr > td {
    padding: 8px;
    line-height: 1.471;
    vertical-align: top;
    border: 1px solid #cad3df; }
  .table > thead > tr > th {
    vertical-align: middle;
    text-align: center;
    font-weight: 4500;
    border: 1px solid #cad3df;
    background-color: #eceff4;
    -webkit-border-radius: 5px 5px 0 0;
    -moz-border-radius: 5px 5px 0 0;
    border-radius: 5px 5px 0 0; }
  .table > tbody + tbody {
    border-top: 2px solid #cad3df; }
  .table .table {
    background-color: #cad3df; }

--condensed tr > th,
--condensed tr > td {
  padding: 5px; }

--bordered {
  border: 1px solid #cad3df; }
  --bordered tr > th,
  --bordered tr > td {
    border: 1px solid #cad3df; }
  --bordered > thead > tr > th,
  --bordered > thead > tr > td {
    border-bottom-width: 2px; }

--striped > tbody > tr:nth-of-type(odd) {
  background-color: #f9f9f9; }

--hover > tbody > tr:hover {
  background-color: #f5f5f5; }

.t5 {
  width: 5%; }

.t10 {
  width: 10%; }

.t12 {
  width: 12.5%; }

/* 1/8 */
.t15 {
  width: 15%; }

.t20 {
  width: 20%; }

.t25 {
  width: 25%; }

/* 1/4 */
.t30 {
  width: 30%; }

.t33 {
  width: 33.333%; }

/* 1/3 */
.t35 {
  width: 35%; }

.t37 {
  width: 37.5%; }

/* 3/8 */
.t40 {
  width: 40%; }

.t45 {
  width: 45%; }

.t50 {
  width: 50%; }

/* 1/2 */
.t55 {
  width: 55%; }

.t60 {
  width: 60%; }

.t62 {
  width: 62.5%; }

/* 5/8 */
.t65 {
  width: 65%; }

.t66 {
  width: 66.666%; }

/* 2/3 */
.t70 {
  width: 70%; }

.t75 {
  width: 75%; }

/* 3/4*/
.t80 {
  width: 80%; }

.t85 {
  width: 85%; }

.t87 {
  width: 87.5%; }

/* 7/8 */
.t90 {
  width: 90%; }

.t95 {
  width: 95%; }

[colspan] {
  text-align: center; }

[colspan="1"] {
  text-align: left; }

[rowspan] {
  vertical-align: middle; }

[rowspan="1"] {
  vertical-align: top; }

.numerical {
  text-align: right; }

h1, h2, h3, h4, h5, h6 {
  font-family: "Roboto Condensed", sans-serif;
  font-weight: 400;
  line-height: 1.3;
  color: inherit;
  text-transform: uppercase; }
  h1 small, h2 small, h3 small, h4 small, h5 small, h6 small {
    font-weight: normal;
    line-height: 1; }

h1,
h2,
h3 {
  margin-top: 25px;
  margin-bottom: 12px; }
  h1 small,
  h2 small,
  h3 small {
    font-size: 65%; }

h4,
h5,
h6 {
  margin-top: 25px;
  margin-bottom: 12px; }
  h4 small,
  h5 small,
  h6 small {
    font-size: 75%; }

h1 {
  font-size: 34px; }

h2 {
  font-size: 27px; }

h3 {
  font-size: 23px; }

h4 {
  font-size: 22px; }

h5 {
  font-size: 26px; }

h6 {
  font-size: 21px; }

p {
  margin: 0 0 12px; }

b {
  font-weight: 400; }

.text-left {
  text-align: left; }

.text-right {
  text-align: right; }

.text-center {
  text-align: center; }

.text-justify {
  text-align: justify; }

.text-nowrap {
  white-space: nowrap; }

@media (min-width: 480px) {
  .text__sm-left {
    text-align: left; }
  .text__sm-right {
    text-align: right; }
  .text__sm-center {
    text-align: center; } }

@media (min-width: 768px) {
  .text__md-left {
    text-align: left; }
  .text__md-right {
    text-align: right; }
  .text__md-center {
    text-align: center; } }

@media (min-width: 992px) {
  .text__lg-left {
    text-align: left; }
  .text__lg-right {
    text-align: right; }
  .text__lg-center {
    text-align: center; } }

@media (min-width: 1200px) {
  .text__xlg-left {
    text-align: left; }
  .text__xlg-right {
    text-align: right; }
  .text__xlg-center {
    text-align: center; } }

.text-lowercase {
  text-transform: lowercase; }

.text-uppercase {
  text-transform: uppercase; }

.text-capitalize {
  text-transform: capitalize; }

.text__sm {
  font-size: 14px; }

.text__md {
  font-size: 17px; }

.text__lg {
  font-size: 18px; }

.text--primary {
  color: #0082d5; }

a.text--primary:hover,
a.text--primary:focus {
  color: #0063a2; }

.text--success {
  color: #2db386; }

a.text--success:hover,
a.text--success:focus {
  color: #238a67; }

.text--info {
  color: #0082d5; }

a.text--info:hover,
a.text--info:focus {
  color: #0063a2; }

.text--warning {
  color: #ffaa00; }

a.text--warning:hover,
a.text--warning:focus {
  color: #cc8800; }

.text--danger {
  color: #e55c5c; }

a.text--danger:hover,
a.text--danger:focus {
  color: #de3030; }

ul,
ol {
  margin-top: 0;
  margin-bottom: 12px; }
  ul ul,
  ul ol,
  ol ul,
  ol ol {
    margin-bottom: 0; }

.list--unstyled {
  padding-left: 0;
  list-style: none; }

.list--inline {
  padding-left: 0;
  list-style: none;
  margin-left: -5px; }
  .list--inline > li {
    display: inline-block;
    padding-left: 5px;
    padding-right: 5px; }

.list--bullet {
  padding-left: 0;
  list-style: none;
  margin-left: 11px; }
  .list--bullet > li {
    margin-bottom: 9.61538px; }
    .list--bullet > li:last-child {
      margin-bottom: 0; }
    .list--bullet > li::before {
      content: '•';
      color: #04be5b;
      font-size: 20px;
      margin-right: 11px; }

.list--number {
  counter-reset: items;
  padding-left: 0;
  margin-left: 11px; }
  .list--number > li {
    margin-bottom: 9.61538px; }
    .list--number > li::before {
      counter-increment: items 1;
      content: counter(items, decimal) ".";
      margin-right: 5px;
      font-weight: 400; }
    .list--number > li:last-child {
      margin-bottom: 0; }

blockquote {
  padding: 0 25px 0 45px;
  margin: 50px 0;
  font-size: 24.9985px;
  line-height: 1.6;
  position: relative; }
  blockquote:before {
    content: '';
    height: 100%;
    width: 3px;
    background-color: #a234d5;
    background-image: -webkit-gradient(linear, left top, left bottom, from(#a234d5), to(#0082d5));
    background-image: -webkit-linear-gradient(to top, #a234d5, #0082d5);
    background-image: -moz-linear-gradient(to top, #a234d5, #0082d5);
    background-image: -o-linear-gradient(to top, #a234d5, #0082d5);
    background-image: -webkit-gradient(linear, left bottom, left top, from(#a234d5), to(#0082d5));
    background-image: -webkit-linear-gradient(bottom, #a234d5, #0082d5);
    background-image: -moz-linear-gradient(bottom, #a234d5, #0082d5);
    background-image: -o-linear-gradient(bottom, #a234d5, #0082d5);
    background-image: linear-gradient(to top, #a234d5, #0082d5);
    filter: progid:DXImageTransform.Microsoft.gradient(startColorStr='#a234d5', endColorStr='#0082d5');
    display: inline-block;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0; }
  blockquote p:last-child,
  blockquote ul:last-child,
  blockquote ol:last-child {
    margin-bottom: 0; }

.icons {
  color: #fff;
  padding-left: 35px;
  min-width: 110px; }
  .iconsTw {
    background: url("../images/icons/icoTw.png") center left 10px no-repeat, #55acee; }
  .iconsFa {
    background: url("../images/icons/icoFa.png") center left 10px no-repeat, #3b5998; }
  .iconsGoog {
    background: url("../images/icons/icoGoog.png") center left 10px no-repeat, #dd4b39; }
  .icons:focus,
  .icons:hover {
    color: #fff;
    -webkit-box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
    -moz-box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
    -o-box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
    box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125); }

/**
 * Aside
*/
/**
 * Footer
*/
.footer {
  padding-top: 20px;
  padding-bottom: 20px;
  background-color: #ccc; }

/**
 * Header
*/
/**
 * Main title
*/
/**
 * old-browser
*/
/**
 * Main container
*/
.main {
  padding-top: 20px;
  padding-bottom: 20px; }

.sliderTitle {
  color: #fefefe;
  text-align: center;
  font-size: 14px;
  background: rgba(55, 67, 85, 0.7);
  padding: 16px;
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0; }

.darkTemplate {
  background: #374355;
  padding: 30px 0 10px; }

.textTemplate {
  padding: 20px; }

.sharePost {
  padding: 20px;
  border-top: 1px solid #cad3df;
  border-bottom: 1px solid #cad3df; }
  .sharePostTitle {
    margin-right: 45px;
    margin-left: 20px; }
  .sharePost h6, .sharePost ul {
    margin: 0; }
  .sharePost li {
    vertical-align: middle; }

.carouseltem {
  overflow-x: auto;
  white-space: nowrap;
  padding-bottom: 30px; }
  .carouseltem a {
    padding: 0 10px;
    position: relative;
    display: inline-block; }
    .carouseltem a img {
      -webkit-border-radius: 5px;
      -moz-border-radius: 5px;
      border-radius: 5px; }
    .carouseltem a:hover::before {
      content: '';
      position: absolute;
      background: url("../images/icons/icoGallery.png") center center no-repeat;
      width: 100%;
      height: 100%;
      z-index: 8;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0; }

.accordion__list {
  list-style: none;
  margin: 0;
  padding: 0; }
  .accordion__list:before,
  .accordion__list:after {
    content: " ";
    display: table; }
  .accordion__list:after {
    clear: both; }

.accordion__item {
  float: left;
  width: 100%; }

.accordion__header {
  background: transparent;
  border-bottom: solid 1px #0072bb;
  color: #333;
  cursor: pointer;
  float: left;
  padding: 0 8px;
  width: 100%; }
  .accordion__header:before,
  .accordion__header:after {
    content: " ";
    display: table; }
  .accordion__header:after {
    clear: both; }
  .accordion__header .icon {
    float: left;
    font-size: 60%;
    height: 32px;
    line-height: 32px;
    margin-right: 8px;
    text-align: center;
    -webkit-transition: -webkit-transform 0.3s;
       -moz-transition: -moz-transform 0.3s;
         -o-transition: -o-transform 0.3s;
            transition: transform 0.3s; }
    .accordion__header .icon:before {
      line-height: 32px; }

.accordion__title {
  float: left;
  margin: 0; }

.accordion__count {
  float: right;
  line-height: 32px;
  margin-right: 20px; }

.accordion__content {
  display: none;
  float: left;
  width: 100%; }

.accordion__content-list {
  list-style: none;
  margin: 0;
  padding: 0; }

.alert {
  padding: 16px 16px 16px 55px;
  margin-bottom: 25px;
  border: 1px solid transparent;
  -webkit-border-radius: 5px;
     -moz-border-radius: 5px;
          border-radius: 5px;
  font-size: 15px;
  background-repeat: no-repeat;
  background-position: center left 16px; }
  .alert--success {
    background-color: #daf5e7;
    border-color: #04be5b;
    color: #04be5b;
    background-image: url("../images/icons/icoAlertSuccess.png"); }
    .alert--success hr {
      border-top-color: #03a54f; }
    .alert--success .alert--link {
      color: #038c43; }
    .alert--success .close {
      color: #04be5b; }
  .alert--info {
    background-color: #d9ecf9;
    border-color: #0082d5;
    color: #0e89d8;
    background-image: url("../images/icons/icoAlertInfo.png"); }
    .alert--info hr {
      border-top-color: #0072bc; }
    .alert--info .alert--link {
      color: #0b6ba8; }
    .alert--info .close {
      color: #0e89d8; }
  .alert--warning {
    background-color: #fff0e4;
    border-color: #ff9948;
    color: #ff9948;
    background-image: url("../images/icons/icoAlertWarning.png"); }
    .alert--warning hr {
      border-top-color: #ff8b2e; }
    .alert--warning .alert--link {
      color: #ff7d15; }
    .alert--warning .close {
      color: #ff9948; }
  .alert--danger {
    background-color: #f8e1e7;
    border-color: #d2335c;
    color: #d2335c;
    background-image: url("../images/icons/icoAlertDanger.png"); }
    .alert--danger hr {
      border-top-color: #c12b51; }
    .alert--danger .alert--link {
      color: #ac2649; }
    .alert--danger .close {
      color: #d2335c; }

.breadcrumbs {
  padding: 8px 15px;
  margin-bottom: 25px;
  list-style: none;
  background-color: transparent; }
  .breadcrumbs > li {
    display: inline-block; }
    .breadcrumbs > li a {
      color: #ccc; }
    .breadcrumbs > li:before {
      content: "/";
      padding: 0 5px;
      color: #ccc; }
    .breadcrumbs > li.active {
      color: #777; }

.container, .browsehappy {
  margin-right: auto;
  margin-left: auto;
  padding-left: 15px;
  padding-right: 15px; }
  .container:before,
  .browsehappy:before,
  .container:after, .browsehappy:after {
    content: " ";
    display: table; }
  .container:after, .browsehappy:after {
    clear: both; }
  @media (min-width: 480px) {
    .container, .browsehappy {
      width: 510px; } }
  @media (min-width: 768px) {
    .container, .browsehappy {
      width: 750px; } }
  @media (min-width: 992px) {
    .container, .browsehappy {
      width: 970px; } }
  @media (min-width: 1200px) {
    .container, .browsehappy {
      width: 1200px; } }

.row {
  margin-left: -15px;
  margin-right: -15px; }
  .row:before,
  .row:after {
    content: " ";
    display: table; }
  .row:after {
    clear: both; }

.container-fluid {
  margin-right: auto;
  margin-left: auto;
  padding-left: 15px;
  padding-right: 15px; }
  .container-fluid:before,
  .container-fluid:after {
    content: " ";
    display: table; }
  .container-fluid:after {
    clear: both; }

.col {
  position: relative;
  float: left;
  min-height: 1px;
  padding-left: 15px;
  padding-right: 15px; }

.col__xs-1 {
  width: 8.33333%; }

.col__xs-2 {
  width: 16.66667%; }

.col__xs-3 {
  width: 25%; }

.col__xs-4 {
  width: 33.33333%; }

.col__xs-5 {
  width: 41.66667%; }

.col__xs-6 {
  width: 50%; }

.col__xs-7 {
  width: 58.33333%; }

.col__xs-8 {
  width: 66.66667%; }

.col__xs-9 {
  width: 75%; }

.col__xs-10 {
  width: 83.33333%; }

.col__xs-11 {
  width: 91.66667%; }

.col__xs-12 {
  width: 100%; }

@media (min-width: 480px) {
  .col__sm-1 {
    width: 8.33333%; }
  .col__sm-2 {
    width: 16.66667%; }
  .col__sm-3 {
    width: 25%; }
  .col__sm-4 {
    width: 33.33333%; }
  .col__sm-5 {
    width: 41.66667%; }
  .col__sm-6 {
    width: 50%; }
  .col__sm-7 {
    width: 58.33333%; }
  .col__sm-8 {
    width: 66.66667%; }
  .col__sm-9 {
    width: 75%; }
  .col__sm-10 {
    width: 83.33333%; }
  .col__sm-11 {
    width: 91.66667%; }
  .col__sm-12 {
    width: 100%; } }

@media (min-width: 768px) {
  .col__md-1 {
    width: 8.33333%; }
  .col__md-2 {
    width: 16.66667%; }
  .col__md-3 {
    width: 25%; }
  .col__md-4 {
    width: 33.33333%; }
  .col__md-5 {
    width: 41.66667%; }
  .col__md-6 {
    width: 50%; }
  .col__md-7 {
    width: 58.33333%; }
  .col__md-8 {
    width: 66.66667%; }
  .col__md-9 {
    width: 75%; }
  .col__md-10 {
    width: 83.33333%; }
  .col__md-11 {
    width: 91.66667%; }
  .col__md-12 {
    width: 100%; } }

@media (min-width: 992px) {
  .col__lg-1 {
    width: 8.33333%; }
  .col__lg-2 {
    width: 16.66667%; }
  .col__lg-3 {
    width: 25%; }
  .col__lg-4 {
    width: 33.33333%; }
  .col__lg-5 {
    width: 41.66667%; }
  .col__lg-6 {
    width: 50%; }
  .col__lg-7 {
    width: 58.33333%; }
  .col__lg-8 {
    width: 66.66667%; }
  .col__lg-9 {
    width: 75%; }
  .col__lg-10 {
    width: 83.33333%; }
  .col__lg-11 {
    width: 91.66667%; }
  .col__lg-12 {
    width: 100%; } }

@media (min-width: 1200px) {
  .col__xlg-1 {
    width: 8.33333%; }
  .col__xlg-2 {
    width: 16.66667%; }
  .col__xlg-3 {
    width: 25%; }
  .col__xlg-4 {
    width: 33.33333%; }
  .col__xlg-5 {
    width: 41.66667%; }
  .col__xlg-6 {
    width: 50%; }
  .col__xlg-7 {
    width: 58.33333%; }
  .col__xlg-8 {
    width: 66.66667%; }
  .col__xlg-9 {
    width: 75%; }
  .col__xlg-10 {
    width: 83.33333%; }
  .col__xlg-11 {
    width: 91.66667%; }
  .col__xlg-12 {
    width: 100%; } }

.media {
  display: block;
  margin: 20px 0; }
  .media__body {
    overflow: hidden;
    font-size: 15px; }
    .media__body h6 {
      margin: 0 0 10px;
      font-size: 17px; }
    .media__body p {
      margin: 0; }
  .media__img {
    float: left;
    margin-right: 25px; }
    .media__img--rev {
      float: right;
      margin-left: 25px; }
  .media__title {
    font-size: 17px; }

.media__img img,
.media__img--rev img {
  display: block; }

.media__body,
.media__body > :last-child {
  margin-bottom: 0; }

.nav {
  margin-bottom: 0;
  padding-left: 0;
  list-style: none; }
  .nav:before,
  .nav:after {
    content: " ";
    display: table; }
  .nav:after {
    clear: both; }
  .nav > li {
    position: relative;
    display: inline-block; }
    .nav > li > a {
      position: relative;
      display: block;
      padding: 10px 15px; }
      .nav > li > a:hover,
      .nav > li > a:focus {
        text-decoration: none;
        background-color: #bbb; }
  .nav > li > a > img {
    max-width: none; }
  .nav--justified {
    width: 100%; }
    .nav--justified > li {
      float: none; }
      .nav--justified > li > a {
        text-align: center;
        margin-bottom: 5px; }
    @media (min-width: 480px) {
      .nav--justified > li {
        display: table-cell;
        width: 1%; }
        .nav--justified > li > a {
          margin-bottom: 0; } }
  .nav--collapse {
    overflow-x: visible;
    padding-right: 15px;
    padding-left: 15px;
    border-top: 1px solid transparent;
    -webkit-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.1);
       -moz-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.1);
            box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.1);
    -webkit-overflow-scrolling: touch; }
    .nav--collapse:before,
    .nav--collapse:after {
      content: " ";
      display: table; }
    .nav--collapse:after {
      clear: both; }
    .nav--collapse.in {
      overflow-y: auto; }
    @media (min-width: 480px) {
      .nav--collapse {
        width: auto;
        border-top: 0;
        -webkit-box-shadow: none;
           -moz-box-shadow: none;
                box-shadow: none; }
        .nav--collapse.collapse {
          display: block !important;
          height: auto !important;
          padding-bottom: 0;
          overflow: visible !important; }
        .nav--collapse.in {
          overflow-y: visible; } }
  .nav--fixed_top {
    position: fixed;
    right: 0;
    left: 0;
    top: 0;
    border-width: 0 0 1px;
    z-index: 1030; }

.navbar {
  position: relative; }
  @media (min-width: 768px) {
    .navbar__left {
      float: left; }
    .navbar__right {
      float: right; } }
  .navbar--collapse {
    overflow-x: visible;
    padding-right: 15px;
    padding-left: 15px;
    border-top: 1px solid transparent;
    -webkit-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.1);
       -moz-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.1);
            box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.1);
    -webkit-overflow-scrolling: touch; }
    .navbar--collapse:before,
    .navbar--collapse:after {
      content: " ";
      display: table; }
    .navbar--collapse:after {
      clear: both; }
    .navbar--collapse.in {
      overflow-y: auto; }
    @media (min-width: 768px) {
      .navbar--collapse {
        width: auto;
        border-top: 0;
        -webkit-box-shadow: none;
           -moz-box-shadow: none;
                box-shadow: none; }
        .navbar--collapse.collapse {
          display: block;
          height: auto;
          padding-bottom: 0;
          overflow: visible; }
        .navbar--collapse.in {
          overflow-y: visible; } }
  .navbar--toggle {
    position: relative;
    float: right;
    margin-right: 15px;
    padding: 9px 10px; }
    .navbar--toggle:focus {
      outline: 0; }
    .navbar--toggle .icon-bar {
      display: block;
      width: 22px;
      height: 2px;
      background: #000;
      -webkit-border-radius: 1px;
         -moz-border-radius: 1px;
              border-radius: 1px; }
    .navbar--toggle .icon-bar + .icon-bar {
      margin-top: 4px; }
    @media (min-width: 768px) {
      .navbar--toggle {
        display: none; } }

.pager {
  padding-left: 0;
  margin: 25px 0;
  list-style: none;
  text-align: center;
  font-size: 15px; }
  .pager:before,
  .pager:after {
    content: " ";
    display: table; }
  .pager:after {
    clear: both; }
  .pager li {
    display: inline; }
    .pager li > a,
    .pager li > span {
      display: inline-block;
      text-decoration: none;
      padding: 5px 14px;
      height: 40px;
      line-height: 28px; }
      .pager li > a.arr,
      .pager li > span.arr {
        width: 40px;
        background-color: #fff;
        border: 1px solid #cad3df;
        -webkit-border-radius: 50px;
           -moz-border-radius: 50px;
                border-radius: 50px; }
    .pager li > a:hover,
    .pager li > a:focus {
      text-decoration: none;
      color: #fff;
      background-color: #0082d5;
      border-color: #0082d5; }
  .pager .next > a,
  .pager .next > span {
    float: right; }
  .pager .previous > a,
  .pager .previous > span {
    float: left; }

.pagination {
  display: block;
  padding-left: 0;
  margin: 25px 0;
  -webkit-border-radius: 5px;
     -moz-border-radius: 5px;
          border-radius: 5px;
  text-align: center; }
  .pagination__item {
    display: inline-block;
    text-transform: uppercase;
    margin-left: -5px; }
    .pagination__item > a,
    .pagination__item > span {
      position: relative;
      font-size: 15px;
      float: left;
      padding: 13px 20px;
      line-height: 1.471;
      text-decoration: none;
      color: #54657e;
      background-color: #fff;
      border: 1px solid #fff;
      -webkit-border-radius: 5px;
      -moz-border-radius: 5px;
      border-radius: 5px; }
    .pagination__item:first-child > a,
    .pagination__item:first-child > span {
      margin-left: 0;
      -webkit-border-bottom-left-radius: 5px;
         -moz-border-radius-bottomleft: 5px;
              border-bottom-left-radius: 5px;
      -webkit-border-top-left-radius: 5px;
         -moz-border-radius-topleft: 5px;
              border-top-left-radius: 5px; }
    .pagination__item:last-child > a,
    .pagination__item:last-child > span {
      -webkit-border-bottom-right-radius: 5px;
         -moz-border-radius-bottomright: 5px;
              border-bottom-right-radius: 5px;
      -webkit-border-top-right-radius: 5px;
         -moz-border-radius-topright: 5px;
              border-top-right-radius: 5px; }
  .pagination > li > a:hover,
  .pagination > li > a:focus,
  .pagination > li > span:hover,
  .pagination > li > span:focus {
    z-index: 3;
    color: #fff;
    background-color: #0082d5;
    border-color: #0082d5; }
  .pagination > .active > a,
  .pagination > .active > a:hover,
  .pagination > .active > a:focus,
  .pagination > .active > span,
  .pagination > .active > span:hover,
  .pagination > .active > span:focus {
    z-index: 2;
    color: #fff;
    background-color: #0082d5;
    border-color: #0082d5;
    cursor: default; }

.visible__xs {
  display: none !important; }

.visible__sm {
  display: none !important; }

.visible__md {
  display: none !important; }

.visible__lg {
  display: none !important; }

.visible__xs-inlineBlock,
.visible__sm-inlineBlock,
.visible__md-inlineBlock,
.visible__lg-inlineBlock {
  display: none !important; }

@media (max-width: 479px) {
  .visible__xs {
    display: block !important; } }

@media (max-width: 479px) {
  .visible__xs-inlineBlock {
    display: inline-block !important; } }

@media (min-width: 480px) and (max-width: 767px) {
  .visible__sm {
    display: block !important; } }

@media (min-width: 480px) and (max-width: 767px) {
  .visible__sm-inlineBlock {
    display: inline-block !important; } }

@media (min-width: 768px) and (max-width: 991px) {
  .visible__md {
    display: block !important; } }

@media (min-width: 768px) and (max-width: 991px) {
  .visible__md-inlineBlock {
    display: inline-block !important; } }

@media (min-width: 992px) {
  .visible__lg {
    display: block !important; } }

@media (min-width: 992px) {
  .visible__lg-inlineBlock {
    display: inline-block !important; } }

@media (max-width: 479px) {
  .hidden__xs {
    display: none !important; } }

@media (min-width: 480px) and (max-width: 767px) {
  .hidden__sm {
    display: none !important; } }

@media (min-width: 768px) and (max-width: 991px) {
  .hidden__md {
    display: none !important; } }

@media (min-width: 992px) {
  .hidden__lg {
    display: none !important; } }

/**
   * padding
  */
.padtop0 {
  padding-top: 0px; }

.padbot0 {
  padding-bottom: 0px; }

.padtop10 {
  padding-top: 10px; }

.padbot10 {
  padding-bottom: 10px; }

.padtop20 {
  padding-top: 20px; }

.padbot20 {
  padding-bottom: 20px; }

.padtop30 {
  padding-top: 30px; }

.padbot30 {
  padding-bottom: 30px; }

.padtop40 {
  padding-top: 40px; }

.padbot40 {
  padding-bottom: 40px; }

.padtop50 {
  padding-top: 50px; }

.padbot50 {
  padding-bottom: 50px; }

.padtop60 {
  padding-top: 60px; }

.padbot60 {
  padding-bottom: 60px; }

.padtop70 {
  padding-top: 70px; }

.padbot70 {
  padding-bottom: 70px; }

.padtop80 {
  padding-top: 80px; }

.padbot80 {
  padding-bottom: 80px; }

.padtop90 {
  padding-top: 90px; }

.padbot90 {
  padding-bottom: 90px; }

.padtop100 {
  padding-top: 100px; }

.padbot100 {
  padding-bottom: 100px; }

/**
   * margin
  */
.margright0 {
  margin-right: 0px; }

.margbot0 {
  margin-bottom: 0px; }

.margtop0 {
  margin-top: 0px; }

.margright10 {
  margin-right: 10px; }

.margbot10 {
  margin-bottom: 10px; }

.margtop10 {
  margin-top: 10px; }

.margright20 {
  margin-right: 20px; }

.margbot20 {
  margin-bottom: 20px; }

.margtop20 {
  margin-top: 20px; }

.margright30 {
  margin-right: 30px; }

.margbot30 {
  margin-bottom: 30px; }

.margtop30 {
  margin-top: 30px; }

.margright40 {
  margin-right: 40px; }

.margbot40 {
  margin-bottom: 40px; }

.margtop40 {
  margin-top: 40px; }

.margright50 {
  margin-right: 50px; }

.margbot50 {
  margin-bottom: 50px; }

.margtop50 {
  margin-top: 50px; }

.margright60 {
  margin-right: 60px; }

.margbot60 {
  margin-bottom: 60px; }

.margtop60 {
  margin-top: 60px; }

.margright70 {
  margin-right: 70px; }

.margbot70 {
  margin-bottom: 70px; }

.margtop70 {
  margin-top: 70px; }

.margright80 {
  margin-right: 80px; }

.margbot80 {
  margin-bottom: 80px; }

.margtop80 {
  margin-top: 80px; }

.margright90 {
  margin-right: 90px; }

.margbot90 {
  margin-bottom: 90px; }

.margtop90 {
  margin-top: 90px; }

.margright100 {
  margin-right: 100px; }

.margbot100 {
  margin-bottom: 100px; }

.margtop100 {
  margin-top: 100px; }

/**
 * close btn
 */
.close {
  float: right;
  font-size: 19.9988px;
  font-weight: bold;
  line-height: 1;
  color: #000;
  text-shadow: none;
  -webkit-opacity: 1;
  -moz-opacity: 1;
  -o-opacity: 1;
  opacity: 1; }
  .close:hover,
  .close:focus {
    color: #000;
    text-decoration: none;
    cursor: pointer;
    -webkit-opacity: 0.5;
    -moz-opacity: 0.5;
    -o-opacity: 0.5;
    opacity: 0.5; }

button.close {
  padding: 0;
  cursor: pointer;
  background: transparent;
  border: 0;
  -webkit-appearance: none; }

.center-block {
  display: block;
  margin-left: auto;
  margin-right: auto; }

.pull-right {
  float: right !important; }

.pull-left {
  float: left !important; }

@media (min-width: 480px) {
  .pull__sm-left {
    float: left; }
  .pull__sm-right {
    float: right; } }

@media (min-width: 768px) {
  .pull__md-left {
    float: left; }
  .pull__md-right {
    float: right; } }

@media (min-width: 992px) {
  .pull__lg-left {
    float: left; }
  .pull__lg-right {
    float: right; } }

@media (min-width: 1200px) {
  .pull__lg-left {
    float: left; }
  .pull__lg-right {
    float: right; } }

.hide {
  display: none !important; }

.show {
  display: block !important; }

.invisible {
  visibility: hidden; }

.text-hide {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0; }

/*# sourceMappingURL=data:application/json;base64, */